<h1>About</h1>
<p>國立虎尾科技大學機械設計工程系</p>
<p>National Formosa University</p>
<p>Department of Mechanical Design Engineering</p>
<p>cp2024 計算機程式</p>
<p>課程教材:</p>
<p style="padding-left: 30px;"><a href="https://blog.jupyter.org/introducing-learn-python-with-jupyter-11214f152159">Learn Python with Jupyter</a> (<a href="https://www.learnpythonwithjupyter.com/">site</a>, <a href="https://localhost:9445/downloads/learn_python_with_jupyter.pdf">ebook</a>)</p>
<p style="padding-left: 30px;">教育版帳號 microsoftonline 登入點: <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a></p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入 <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a> Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼:fqpabi8</p>
<p>個人倉儲:<a href="https://github.com/mdecp2024/hw-ZJJ41323248">https://github.com/mdecp2024/hw-ZJJ41323248</a></p>
<p>個人網站:<a class="Link--inTextBlock" href="https://mdecp2024.github.io/hw-ZJJ41323248/">https://mdecp2024.github.io/hw-ZJJ41323248/</a></p>
<p>其他資訊:</p>
<p style="padding-left: 30px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 30px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<h1>Attendance</h1>
<p>出席 (10%) - 自行舉證評分</p>
<p>自行利用 Github commits 提交記錄評分.</p>
<h1>HW 1</h1>
<h4>主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">USB 隨身碟:</p>
<p style="padding-left: 60px;">下載 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> (428 MB, 解開壓縮後約 1.5 GB)</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2024/content/Jupyter.html">Jupyter</a></p>
<p style="padding-left: 30px;">What are Github and Codespaces?</p>
<p style="padding-left: 60px;"><a href="https://docs.github.com/en/get-started/start-your-journey/hello-world">Hello World - GitHub Docs</a></p>
<p style="padding-left: 30px;">利用包含學號的字串作為帳號, 申請免費使用 Github.</p>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 1</p>
<hr/>
<p>PART 1: Creating the basics 資料整理 (10%)</p>
<p>啟動可攜程式系統後, 在命令列中:</p>
<p>y:\&gt;cd notebook</p>
<p>y:\notebook&gt;jupyter lab --collaborative</p>
<p>進入 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a> 練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過 <a href="https://nbviewer.org/">https://nbviewer.org/</a> 將已經提交的 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a>, 嵌入下列網頁中.</p>
<p><iframe height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb" width="600"></iframe></p>
<p>上列 iframe 標註的 html 語法:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"&gt;&lt;/iframe&gt;</pre>
<p>完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 1 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>w7</h3>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Yh6wZJW74XU?si=0gkjhfe3cRXH2m6h" title="YouTube video player" width="560"></iframe></p>
<h3>w10</h3>
<p>第一題</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/4ZzKaXr58Ww?si=SERnNgJxer4q4Uon" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>第二題</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/9qVHXE4WADE?si=Q7gJBR5I_yAuO5cE" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>第三題</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/NHdy4bcayzI?si=X3WdrNoLTreW7NuJ" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>心得:</p>
<p>   在這個學期的計算機程式課程中，雖然上課有再聽，但是還是很難，幸虧有同學們的幫忙，不然我上學期要不被當真的有點困難，像是今天隨堂測驗，有三題，前兩題想一下就可以完成。但當到了第三題，就真的難倒我了，幸虧老師這次考試手下留情，有提供我們程式，不然我可能真的要被第三題打的體無完膚了，雖然帝一次接觸程式語言學習起來真的非常困難，但是在未來，程式真的很重要，所以我會努力去學習。</p>
<h3>w11</h3>
<p><a href="https://mdecp2024.github.io/hw-ZJJ41323248/content/Brython.html?src=https://gist.githubusercontent.com/ZJJ41323248/508964b9364b36ec54b555998c5f87d4/raw/caa18220112441d42e176c06fa9efa111e9d4cfc/%25E8%25AA%25B2%25E5%25A0%2582%25E4%25BD%259C%25E6%25A5%25AD.py">課堂程式作業</a></p>
<p><a href="https://mdecp2024.github.io/hw-ZJJ41323248/content/Brython.html?src=https://gist.githubusercontent.com/ZJJ41323248/508964b9364b36ec54b555998c5f87d4/raw/b25950cc8699d779a74bddb856dfdfe45975e3df/%25E8%25AA%25B2%25E5%25A0%2582%25E4%25BD%259C%25E6%25A5%25AD-2.py">11*11的灰色框架</a></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/vpexVMEY8m8?si=c1wDGw_iPNB09WIV" title="YouTube video player" width="560"></iframe></p>
<p>hw-1:</p>
<p><span>用 Python 程式</span><a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5e6eda7a004c15fa7262b9a80bfa4af6/raw/c2225ac22f32ee8485a630b42cf3f4d8567bb661/up_to_down_pyramid.py">由上往下列印三角形 *</a><span>, 或</span><a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5e6eda7a004c15fa7262b9a80bfa4af6/raw/56793c72d4495d564e3cc6214ed5fb68dbd2b21d/left_to_right_pyramid.py">由左往右列印三角形 *</a>延伸為用"*"在10*10區塊中構成的一個實心圓</p>
<p><a href="https://mdecp2024.github.io/hw-ZJJ41323248/content/Brython.html?src=https://gist.githubusercontent.com/ZJJ41323248/508964b9364b36ec54b555998c5f87d4/raw/32f458743389f9207d718df4e293b220fdee616a/hw-1.py">實心圓</a></p>
<p>hw-2:</p>
<p>利用 Brython 繪製方格與塗色, 如下連結, 請設法修改此一程式, 直接將程式存入個人的 Gist, 並利用黑色方塊圍出一個圓形區域.(<a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5705fc2a67aa1db0c0d44d6d0478b08b/raw/f95909804a1f134963cade8463eeb9bd32129ea8/grid_line_and_fill_in_Brython.py">網頁上的方格與塗色</a>)</p>
<p><a href="https://mdecp2024.github.io/hw-ZJJ41323248/content/Brython.html?src=https://gist.githubusercontent.com/ZJJ41323248/508964b9364b36ec54b555998c5f87d4/raw/1f66098ef22fa20efbe8b522a20bd87b71989aa4/hw-2.py">用黑色方塊在10*10區塊內圍成的圓形</a></p>
<p>提示:貼上網頁要在網址的後方加上?src="自己程式的網址"</p>
<p>心得:</p>
<p>在做這個作業的過程中有使用到ChatGPT，也了解到它有多方便，但是它也不是沒有缺點，在我做這個作業的過程中就有感覺到，它好像也不是那麼聰明，因為你如果沒有講得很清楚，它是會會錯意的，這也讓我相信凡事都是一體兩面的。</p><h1>HW 2</h1>
<h4>主題: Python 的數列、判斷式與重複迴圈 (20%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 2 and Part 3</p>
<hr/>
<p>延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%):</p>
<p>PART 2: Introduction to lists and if/else statements</p>
<p>PART 3: Introduction to the for loop</p>
<p>完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 2 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>HW 3</h1>
<h4>主題: Python 的數字、演算法與迴圈 (20%)</h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 4 and Part 5</p>
<p>完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 3 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>w5</h3>
<p>print 與 for 重複迴圈</p>
<p>help(print)</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_358481">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py functions">Help</code> <code class="py plain">on built</code><code class="py keyword">-</code><code class="py keyword">in</code> <code class="py plain">function </code><code class="py functions">print</code> <code class="py keyword">in</code> <code class="py plain">module builtins:</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="py functions">print</code><code class="py plain">(...)</code></div>
<div class="line number4 index3 alt1"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(value, ..., sep</code><code class="py keyword">=</code><code class="py string">' '</code><code class="py plain">, end</code><code class="py keyword">=</code><code class="py string">'\n'</code><code class="py plain">, </code><code class="py functions">file</code><code class="py keyword">=</code><code class="py plain">sys.stdout, flush</code><code class="py keyword">=</code><code class="py color1">False</code><code class="py plain">)</code></div>
<div class="line number5 index4 alt2"><code class="py spaces">    </code> </div>
<div class="line number6 index5 alt1"><code class="py spaces">    </code><code class="py plain">Prints the values to a stream, </code><code class="py keyword">or</code> <code class="py plain">to sys.stdout by default.</code></div>
<div class="line number7 index6 alt2"><code class="py spaces">    </code><code class="py plain">Optional keyword arguments:</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">    </code><code class="py functions">file</code><code class="py plain">:  a </code><code class="py functions">file</code><code class="py keyword">-</code><code class="py plain">like </code><code class="py functions">object</code> <code class="py plain">(stream); defaults to the current sys.stdout.</code></div>
<div class="line number9 index8 alt2"><code class="py spaces">    </code><code class="py plain">sep:   string inserted between values, default a space.</code></div>
<div class="line number10 index9 alt1"><code class="py spaces">    </code><code class="py plain">end:   string appended after the last value, default a newline.</code></div>
<div class="line number11 index10 alt2"><code class="py spaces">    </code><code class="py plain">flush: whether to forcibly flush the stream.</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>help(range)</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_752473">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
<div class="line number83 index82 alt2">83</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py functions">Help</code> <code class="py plain">on </code><code class="py keyword">class</code> <code class="py functions">range</code> <code class="py keyword">in</code> <code class="py plain">module builtins:</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="py keyword">class</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py functions">object</code><code class="py plain">)</code></div>
<div class="line number4 index3 alt1"><code class="py spaces"> </code><code class="py plain">|  </code><code class="py functions">range</code><code class="py plain">(stop) </code><code class="py keyword">-</code><code class="py plain">&gt; </code><code class="py functions">range</code> <code class="py functions">object</code></div>
<div class="line number5 index4 alt2"><code class="py spaces"> </code><code class="py plain">|  </code><code class="py functions">range</code><code class="py plain">(start, stop[, step]) </code><code class="py keyword">-</code><code class="py plain">&gt; </code><code class="py functions">range</code> <code class="py functions">object</code></div>
<div class="line number6 index5 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number7 index6 alt2"><code class="py spaces"> </code><code class="py plain">|  Return an </code><code class="py functions">object</code> <code class="py plain">that produces a sequence of integers </code><code class="py keyword">from</code> <code class="py plain">start (inclusive)</code></div>
<div class="line number8 index7 alt1"><code class="py spaces"> </code><code class="py plain">|  to stop (exclusive) by step.  </code><code class="py functions">range</code><code class="py plain">(i, j) produces i, i</code><code class="py keyword">+</code><code class="py value">1</code><code class="py plain">, i</code><code class="py keyword">+</code><code class="py value">2</code><code class="py plain">, ..., j</code><code class="py keyword">-</code><code class="py value">1.</code></div>
<div class="line number9 index8 alt2"><code class="py spaces"> </code><code class="py plain">|  start defaults to </code><code class="py value">0</code><code class="py plain">, </code><code class="py keyword">and</code> <code class="py plain">stop </code><code class="py keyword">is</code> <code class="py plain">omitted!  </code><code class="py functions">range</code><code class="py plain">(</code><code class="py value">4</code><code class="py plain">) produces </code><code class="py value">0</code><code class="py plain">, </code><code class="py value">1</code><code class="py plain">, </code><code class="py value">2</code><code class="py plain">, </code><code class="py value">3.</code></div>
<div class="line number10 index9 alt1"><code class="py spaces"> </code><code class="py plain">|  These are exactly the valid indices </code><code class="py keyword">for</code> <code class="py plain">a </code><code class="py functions">list</code> <code class="py plain">of </code><code class="py value">4</code> <code class="py plain">elements.</code></div>
<div class="line number11 index10 alt2"><code class="py spaces"> </code><code class="py plain">|  When step </code><code class="py keyword">is</code> <code class="py plain">given, it specifies the increment (</code><code class="py keyword">or</code> <code class="py plain">decrement).</code></div>
<div class="line number12 index11 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number13 index12 alt2"><code class="py spaces"> </code><code class="py plain">|  Methods defined here:</code></div>
<div class="line number14 index13 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number15 index14 alt2"><code class="py spaces"> </code><code class="py plain">|  __bool__(</code><code class="py color1">self</code><code class="py plain">, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number16 index15 alt1"><code class="py spaces"> </code><code class="py plain">|      </code><code class="py color1">True</code> <code class="py keyword">if</code> <code class="py color1">self</code> <code class="py keyword">else</code> <code class="py color1">False</code></div>
<div class="line number17 index16 alt2"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number18 index17 alt1"><code class="py spaces"> </code><code class="py plain">|  __contains__(</code><code class="py color1">self</code><code class="py plain">, key, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number19 index18 alt2"><code class="py spaces"> </code><code class="py plain">|      Return key </code><code class="py keyword">in</code> <code class="py color1">self</code><code class="py plain">.</code></div>
<div class="line number20 index19 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number21 index20 alt2"><code class="py spaces"> </code><code class="py plain">|  __eq__(</code><code class="py color1">self</code><code class="py plain">, value, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number22 index21 alt1"><code class="py spaces"> </code><code class="py plain">|      Return </code><code class="py color1">self</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py plain">value.</code></div>
<div class="line number23 index22 alt2"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number24 index23 alt1"><code class="py spaces"> </code><code class="py plain">|  __ge__(</code><code class="py color1">self</code><code class="py plain">, value, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number25 index24 alt2"><code class="py spaces"> </code><code class="py plain">|      Return </code><code class="py color1">self</code><code class="py plain">&gt;</code><code class="py keyword">=</code><code class="py plain">value.</code></div>
<div class="line number26 index25 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number27 index26 alt2"><code class="py spaces"> </code><code class="py plain">|  __getattribute__(</code><code class="py color1">self</code><code class="py plain">, name, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number28 index27 alt1"><code class="py spaces"> </code><code class="py plain">|      Return </code><code class="py functions">getattr</code><code class="py plain">(</code><code class="py color1">self</code><code class="py plain">, name).</code></div>
<div class="line number29 index28 alt2"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number30 index29 alt1"><code class="py spaces"> </code><code class="py plain">|  __getitem__(</code><code class="py color1">self</code><code class="py plain">, key, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number31 index30 alt2"><code class="py spaces"> </code><code class="py plain">|      Return </code><code class="py color1">self</code><code class="py plain">[key].</code></div>
<div class="line number32 index31 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number33 index32 alt2"><code class="py spaces"> </code><code class="py plain">|  __gt__(</code><code class="py color1">self</code><code class="py plain">, value, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number34 index33 alt1"><code class="py spaces"> </code><code class="py plain">|      Return </code><code class="py color1">self</code><code class="py plain">&gt;value.</code></div>
<div class="line number35 index34 alt2"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number36 index35 alt1"><code class="py spaces"> </code><code class="py plain">|  __hash__(</code><code class="py color1">self</code><code class="py plain">, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number37 index36 alt2"><code class="py spaces"> </code><code class="py plain">|      Return </code><code class="py functions">hash</code><code class="py plain">(</code><code class="py color1">self</code><code class="py plain">).</code></div>
<div class="line number38 index37 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number39 index38 alt2"><code class="py spaces"> </code><code class="py plain">|  __iter__(</code><code class="py color1">self</code><code class="py plain">, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number40 index39 alt1"><code class="py spaces"> </code><code class="py plain">|      Implement </code><code class="py functions">iter</code><code class="py plain">(</code><code class="py color1">self</code><code class="py plain">).</code></div>
<div class="line number41 index40 alt2"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number42 index41 alt1"><code class="py spaces"> </code><code class="py plain">|  __le__(</code><code class="py color1">self</code><code class="py plain">, value, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number43 index42 alt2"><code class="py spaces"> </code><code class="py plain">|      Return </code><code class="py color1">self</code><code class="py plain">&lt;</code><code class="py keyword">=</code><code class="py plain">value.</code></div>
<div class="line number44 index43 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number45 index44 alt2"><code class="py spaces"> </code><code class="py plain">|  __len__(</code><code class="py color1">self</code><code class="py plain">, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number46 index45 alt1"><code class="py spaces"> </code><code class="py plain">|      Return </code><code class="py functions">len</code><code class="py plain">(</code><code class="py color1">self</code><code class="py plain">).</code></div>
<div class="line number47 index46 alt2"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number48 index47 alt1"><code class="py spaces"> </code><code class="py plain">|  __lt__(</code><code class="py color1">self</code><code class="py plain">, value, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number49 index48 alt2"><code class="py spaces"> </code><code class="py plain">|      Return </code><code class="py color1">self</code><code class="py plain">&lt;value.</code></div>
<div class="line number50 index49 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number51 index50 alt2"><code class="py spaces"> </code><code class="py plain">|  __ne__(</code><code class="py color1">self</code><code class="py plain">, value, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number52 index51 alt1"><code class="py spaces"> </code><code class="py plain">|      Return </code><code class="py color1">self</code><code class="py plain">!</code><code class="py keyword">=</code><code class="py plain">value.</code></div>
<div class="line number53 index52 alt2"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number54 index53 alt1"><code class="py spaces"> </code><code class="py plain">|  __reduce__(...)</code></div>
<div class="line number55 index54 alt2"><code class="py spaces"> </code><code class="py plain">|      Helper </code><code class="py keyword">for</code> <code class="py plain">pickle.</code></div>
<div class="line number56 index55 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number57 index56 alt2"><code class="py spaces"> </code><code class="py plain">|  __repr__(</code><code class="py color1">self</code><code class="py plain">, </code><code class="py keyword">/</code><code class="py plain">)</code></div>
<div class="line number58 index57 alt1"><code class="py spaces"> </code><code class="py plain">|      Return </code><code class="py functions">repr</code><code class="py plain">(</code><code class="py color1">self</code><code class="py plain">).</code></div>
<div class="line number59 index58 alt2"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number60 index59 alt1"><code class="py spaces"> </code><code class="py plain">|  __reversed__(...)</code></div>
<div class="line number61 index60 alt2"><code class="py spaces"> </code><code class="py plain">|      Return a reverse iterator.</code></div>
<div class="line number62 index61 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number63 index62 alt2"><code class="py spaces"> </code><code class="py plain">|  count(...)</code></div>
<div class="line number64 index63 alt1"><code class="py spaces"> </code><code class="py plain">|      rangeobject.count(value) </code><code class="py keyword">-</code><code class="py plain">&gt; integer </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py keyword">return</code> <code class="py plain">number of occurrences of value</code></div>
<div class="line number65 index64 alt2"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number66 index65 alt1"><code class="py spaces"> </code><code class="py plain">|  index(...)</code></div>
<div class="line number67 index66 alt2"><code class="py spaces"> </code><code class="py plain">|      rangeobject.index(value) </code><code class="py keyword">-</code><code class="py plain">&gt; integer </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py keyword">return</code> <code class="py plain">index of value.</code></div>
<div class="line number68 index67 alt1"><code class="py spaces"> </code><code class="py plain">|      Raise ValueError </code><code class="py keyword">if</code> <code class="py plain">the value </code><code class="py keyword">is</code> <code class="py keyword">not</code> <code class="py plain">present.</code></div>
<div class="line number69 index68 alt2"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number70 index69 alt1"><code class="py spaces"> </code><code class="py plain">|  </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code></div>
<div class="line number71 index70 alt2"><code class="py spaces"> </code><code class="py plain">|  Static methods defined here:</code></div>
<div class="line number72 index71 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number73 index72 alt2"><code class="py spaces"> </code><code class="py plain">|  __new__(</code><code class="py keyword">*</code><code class="py plain">args, </code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py plain">kwargs) </code><code class="py keyword">from</code> <code class="py plain">builtins.</code><code class="py functions">type</code></div>
<div class="line number74 index73 alt1"><code class="py spaces"> </code><code class="py plain">|      Create </code><code class="py keyword">and</code> <code class="py keyword">return</code> <code class="py plain">a new </code><code class="py functions">object</code><code class="py plain">.  See </code><code class="py functions">help</code><code class="py plain">(</code><code class="py functions">type</code><code class="py plain">) </code><code class="py keyword">for</code> <code class="py plain">accurate signature.</code></div>
<div class="line number75 index74 alt2"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number76 index75 alt1"><code class="py spaces"> </code><code class="py plain">|  </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py keyword">-</code></div>
<div class="line number77 index76 alt2"><code class="py spaces"> </code><code class="py plain">|  Data descriptors defined here:</code></div>
<div class="line number78 index77 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number79 index78 alt2"><code class="py spaces"> </code><code class="py plain">|  start</code></div>
<div class="line number80 index79 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number81 index80 alt2"><code class="py spaces"> </code><code class="py plain">|  step</code></div>
<div class="line number82 index81 alt1"><code class="py spaces"> </code><code class="py plain">|  </code></div>
<div class="line number83 index82 alt2"><code class="py spaces"> </code><code class="py plain">|  stop</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>與 ChatGPT 對話:</p>
<p>可以解釋一下help(range) 傳回來的內容嗎?</p>
<p>將 help(range) 傳回的內容貼給 ChatGPT, 然後問:</p>
<p>可以舉例詳細說明以下 help(range) 傳回來的內容嗎? 然後貼上 help 傳回的資料.</p>
<p>詢問 for i in range():</p>
<p>如何解釋 Python 中的 for i in range(5):</p>
<p>如何解釋 range(5) ?</p>
<p>range(5) 是數列嗎?</p>
<p>能夠生成從 0 到 4 的整數序列, 所以可以稱 range(5) 為甚麼?</p>
<p data-pm-slice="0 0 []">請舉 10 個可以協助使用者理解 for range 與 print 等關鍵字的範例</p>
<p data-pm-slice="0 0 []">請用 Python 的 for 跟 print 印出五行的 * 排列成的三角形金字塔, 也就是 * 在最中間, 第二行為正中央的 *** 然後第三行 *****, 總共五行.</p>
<p data-pm-slice="0 0 []">請詳細解釋你的解法過程</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_606664">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py plain">問題分析</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="py plain">我們希望生成一個由星號 </code><code class="py keyword">*</code> <code class="py plain">組成的金字塔，總共 </code><code class="py value">5</code> <code class="py plain">行，並且使星號在每一行中間對齊。金字塔的形狀如下：</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="py spaces">    </code><code class="py keyword">*</code></div>
<div class="line number6 index5 alt1"><code class="py spaces">   </code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code></div>
<div class="line number7 index6 alt2"><code class="py spaces">  </code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code></div>
<div class="line number8 index7 alt1"><code class="py spaces"> </code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code></div>
<div class="line number9 index8 alt2"><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py keyword">*</code></div>
<div class="line number10 index9 alt1"> </div>
<div class="line number11 index10 alt2"><code class="py plain">解法步驟</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="py spaces">    </code><code class="py plain">設定行數： 我們首先定義金字塔的行數。這裡我們設置 n </code><code class="py keyword">=</code> <code class="py value">5</code><code class="py plain">，代表金字塔有 </code><code class="py value">5</code> <code class="py plain">行。</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="py spaces">    </code><code class="py plain">使用 </code><code class="py keyword">for</code> <code class="py plain">迴圈： 我們將使用 </code><code class="py keyword">for</code> <code class="py plain">迴圈來迭代每一行。</code><code class="py functions">range</code><code class="py plain">(n) 會生成從 </code><code class="py value">0</code> <code class="py plain">到 </code><code class="py value">4</code> <code class="py plain">的整數，對應於每一行的索引。</code></div>
<div class="line number16 index15 alt1"> </div>
<div class="line number17 index16 alt2"><code class="py spaces">    </code><code class="py plain">計算空格數： 為了使星號在每一行中間對齊，我們需要在星號前面印出一些空格。</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">        </code><code class="py plain">在第 i 行，前面需要印出 n </code><code class="py keyword">-</code> <code class="py plain">i </code><code class="py keyword">-</code> <code class="py value">1</code> <code class="py plain">個空格。這樣可以確保每一行的星號都在金字塔的中間位置。</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">        </code><code class="py plain">例如，在第 </code><code class="py value">0</code> <code class="py plain">行（第一行）需要 </code><code class="py value">4</code> <code class="py plain">個空格，在第 </code><code class="py value">1</code> <code class="py plain">行需要 </code><code class="py value">3</code> <code class="py plain">個空格，以此類推。</code></div>
<div class="line number20 index19 alt1"> </div>
<div class="line number21 index20 alt2"><code class="py spaces">    </code><code class="py plain">計算星號數： 每一行的星號數量是 </code><code class="py value">2</code> <code class="py keyword">*</code> <code class="py plain">i </code><code class="py keyword">+</code> <code class="py value">1</code><code class="py plain">。</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">        </code><code class="py plain">在第 </code><code class="py value">0</code> <code class="py plain">行有 </code><code class="py value">1</code> <code class="py plain">個星號，第一行有 </code><code class="py value">3</code> <code class="py plain">個星號，第二行有 </code><code class="py value">5</code> <code class="py plain">個星號，依此類推，這樣的模式使得每行的星號數量都是奇數並且增加。</code></div>
<div class="line number23 index22 alt2"> </div>
<div class="line number24 index23 alt1"><code class="py spaces">    </code><code class="py plain">印出結果： 使用 </code><code class="py functions">print</code><code class="py plain">() 函數印出計算得出的空格和星號。在第一個 </code><code class="py functions">print</code> <code class="py plain">中使用 end</code><code class="py keyword">=</code><code class="py plain">'' 是為了避免換行，使得空格和星號能在同一行內輸出。</code></div>
<div class="line number25 index24 alt2"> </div>
<div class="line number26 index25 alt1"><code class="py plain">程式碼實現</code></div>
<div class="line number27 index26 alt2"> </div>
<div class="line number28 index27 alt1"><code class="py plain">以下是完整的程式碼和註解：</code></div>
<div class="line number29 index28 alt2"> </div>
<div class="line number30 index29 alt1"><code class="py plain">python</code></div>
<div class="line number31 index30 alt2"> </div>
<div class="line number32 index31 alt1"><code class="py plain">n </code><code class="py keyword">=</code> <code class="py value">5</code>  <code class="py comments"># 總共的行數</code></div>
<div class="line number33 index32 alt2"> </div>
<div class="line number34 index33 alt1"><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(n):  </code><code class="py comments"># 對於每一行</code></div>
<div class="line number35 index34 alt2"><code class="py spaces">    </code><code class="py comments"># 印出空格</code></div>
<div class="line number36 index35 alt1"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">' '</code> <code class="py keyword">*</code> <code class="py plain">(n </code><code class="py keyword">-</code> <code class="py plain">i </code><code class="py keyword">-</code> <code class="py value">1</code><code class="py plain">), end</code><code class="py keyword">=</code><code class="py plain">'')  </code><code class="py comments"># 在每行前面印出空格</code></div>
<div class="line number37 index36 alt2"><code class="py spaces">    </code><code class="py comments"># 印出星號</code></div>
<div class="line number38 index37 alt1"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">'*'</code> <code class="py keyword">*</code> <code class="py plain">(</code><code class="py value">2</code> <code class="py keyword">*</code> <code class="py plain">i </code><code class="py keyword">+</code> <code class="py value">1</code><code class="py plain">))  </code><code class="py comments"># 每行印出 2*i + 1 個星號</code></div>
<div class="line number39 index38 alt2"> </div>
<div class="line number40 index39 alt1"><code class="py plain">執行結果</code></div>
<div class="line number41 index40 alt2"> </div>
<div class="line number42 index41 alt1"><code class="py plain">當你執行這段程式碼時，它會輸出一個對稱的金字塔，每一行的星號數量和位置都符合我們的要求。</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p></p>
<h3>w6</h3>
<p>操作步驟:</p>
<ol>
<li>下載 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> (可攜程式環境)</li>
<li>下載<span> </span><a href="https://mde.tw/cp2024/downloads/zmq_remote_api_ex_cube_triangle.7z">zmq_remote_api_ex_cube_triangle.7z</a> (利用 Python 控制模擬場景中的物件)</li>
<li>進入可攜程式環境中 data/CoppeliaSim 目錄, 開啟 coppeliaSim.exe (機電整合模擬程式,<span> </span><a href="https://github.com/CoppeliaRobotics">原始碼</a>)</li>
<li>啟動可攜程式環境, 雙點擊 start_ipv6.bat, 系統會啟動四個命令列, 兩個 SciTE 編輯器</li>
<li>執行場景控制程式前, 先處理操作系統的防火牆, 將下列指令存為 .bat 檔案後, 以管理員身分執行, 以便開啟 23000-23050 埠號進出:</li>
<li>netsh advfirewall firewall add rule name="allow_23000-23050" dir=in action=allow protocol=TCP localport=23000-23050<br/>netsh advfirewall firewall add rule name="allow_23000-23050" dir=out action=allow protocol=TCP localport=23000-23050</li>
<li>開啟 CoppeliaSim 中的視覺串流伺服器: Modules - Connectivity - Visualization stream</li>
<li>利用 SciTE 開啟 put_cubes_into_scene_1.py, 利用 Tools - Go 執行操控程式</li>
<li>使用者可以透過瀏覽器, 以模擬場景所在電腦的 IP, 且埠號為 23020 觀看模擬場景<img alt="" height="147" src="/images/螢幕擷取畫面 2024-10-16 123255.png" width="261"/></li>
<li>120.113.99.48:23020</li>
</ol>
<h1>HW 4</h1>
<h4>主題: 利用 Python 控制機電模擬系統 (20%)</h4>
<p style="padding-left: 30px;">利用 <a href="https://solvespace.com/">https://solvespace.com/</a> 建立機械系統零組件</p>
<p style="padding-left: 30px;">利用 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 建立機電模擬系統</p>
<p style="padding-left: 30px;">利用 <a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm">Python</a> 跨網路控制瀏覽器上的機電模擬系統</p>
<p style="padding-left: 30px;">範例:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 60px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<p>完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 4 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>Final Report</h1>
<p>期末口頭與書面專題報告 (20%)</p>
<p>期末口頭專題報告影片:</p>
<p style="padding-left: 30px;">......</p>
<p>期末書面專題報告檔案 (pdf):</p>
<p style="padding-left: 30px;">......</p>
<p>電腦輔助設計與實習課程總結心得:</p>
<p style="padding-left: 30px;">......</p>
<p>期末報告自評成績:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中.</p>
<p style="padding-left: 30px;"></p>
<h1>Brython</h1>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>